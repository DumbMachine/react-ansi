{"remainingRequest":"/Users/raohai/works/react-ansi/node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js??ref--11-1!/Users/raohai/works/react-ansi/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js??ref--11-2!/Users/raohai/works/react-ansi/node_modules/_source-map-loader@0.2.4@source-map-loader/index.js!/Users/raohai/works/react-ansi/src/Spliter.ts","dependencies":[{"path":"/Users/raohai/works/react-ansi/src/Spliter.ts","mtime":1559146983167},{"path":"/Users/raohai/works/react-ansi/node_modules/_cache-loader@3.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/raohai/works/react-ansi/node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/raohai/works/react-ansi/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/raohai/works/react-ansi/node_modules/_source-map-loader@0.2.4@source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9Vc2Vycy9yYW9oYWkvd29ya3MvcmVhY3QtYW5zaS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL1VzZXJzL3Jhb2hhaS93b3Jrcy9yZWFjdC1hbnNpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL3Jhb2hhaS93b3Jrcy9yZWFjdC1hbnNpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmVudGVyTW9kdWxlOwogIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7Cn0pKCk7CgpleHBvcnQgdmFyIHdhc2hSZWdFeHAgPSAnXHgxYj9bWzAtOTtdK1thLXpBLVpdJzsKCmlmICh0eXBlb2Ygd2FzaFJlZ0V4cCAhPT0gJ3VuZGVmaW5lZCcgJiYgd2FzaFJlZ0V4cCAmJiB3YXNoUmVnRXhwID09PSBPYmplY3Qod2FzaFJlZ0V4cCkgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZSh3YXNoUmVnRXhwKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3YXNoUmVnRXhwLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAid2FzaFJlZ0V4cCIsCiAgICAgIGZpbGVuYW1lOiAic3JjL1NwbGl0ZXIudHMiCiAgICB9CiAgfSk7Cn0KCmlmICh0eXBlb2YgTWF0Y2hlciAhPT0gJ3VuZGVmaW5lZCcgJiYgTWF0Y2hlciAmJiBNYXRjaGVyID09PSBPYmplY3QoTWF0Y2hlcikgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShNYXRjaGVyKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShNYXRjaGVyLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiTWF0Y2hlciIsCiAgICAgIGZpbGVuYW1lOiAic3JjL1NwbGl0ZXIudHMiCiAgICB9CiAgfSk7Cn0KCmlmICh0eXBlb2YgUGFydGljYWwgIT09ICd1bmRlZmluZWQnICYmIFBhcnRpY2FsICYmIFBhcnRpY2FsID09PSBPYmplY3QoUGFydGljYWwpICYmIE9iamVjdC5pc0V4dGVuc2libGUoUGFydGljYWwpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFBhcnRpY2FsLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiUGFydGljYWwiLAogICAgICBmaWxlbmFtZTogInNyYy9TcGxpdGVyLnRzIgogICAgfQogIH0pOwp9CgpleHBvcnQgdmFyIFNwbGl0ZXIgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBTcGxpdGVyKG1hdGNoZXJzKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU3BsaXRlcik7CgogICAgdGhpcy5tYXRjaGVycyA9IG1hdGNoZXJzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFNwbGl0ZXIsIFt7CiAgICBrZXk6ICJleGVjdXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBleGVjdXRlKGxvZykgewogICAgICB2YXIgcGFydGljYWxzID0gW107CiAgICAgIHZhciBsYXN0SW5kZXggPSAwOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm1hdGNoZXJzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdmFyIF90aGlzJG1hdGNoZXJzJGkgPSBfc2xpY2VkVG9BcnJheSh0aGlzLm1hdGNoZXJzW2ldLCA0KSwKICAgICAgICAgICAgbmFtZSA9IF90aGlzJG1hdGNoZXJzJGlbMF0sCiAgICAgICAgICAgIHJlZ0V4cFN0YXJ0ID0gX3RoaXMkbWF0Y2hlcnMkaVsxXSwKICAgICAgICAgICAgcmVnRXhwRW5kID0gX3RoaXMkbWF0Y2hlcnMkaVsyXSwKICAgICAgICAgICAgZm9sZCA9IF90aGlzJG1hdGNoZXJzJGlbM107CgogICAgICAgIHJlZ0V4cFN0YXJ0Lmxhc3RJbmRleCA9IGxhc3RJbmRleDsKICAgICAgICByZWdFeHBFbmQubGFzdEluZGV4ID0gbGFzdEluZGV4OwogICAgICAgIHZhciBzdGFydE1hdGNoID0gcmVnRXhwU3RhcnQuZXhlYyhsb2cpOwoKICAgICAgICBpZiAoIXN0YXJ0TWF0Y2gpIHsKICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgIH0KCiAgICAgICAgdmFyIGVuZE1hdGNoID0gcmVnRXhwRW5kLmV4ZWMobG9nKTsKCiAgICAgICAgaWYgKCFlbmRNYXRjaCkgewogICAgICAgICAgY29udGludWU7CiAgICAgICAgfQoKICAgICAgICB2YXIgc3RhcnRQb3NpdGlvbiA9IHN0YXJ0TWF0Y2guaW5kZXg7CiAgICAgICAgdmFyIGVuZFBvc2l0aW9uID0gZW5kTWF0Y2guaW5kZXg7CiAgICAgICAgdmFyIGN1cnNvciA9IGVuZFBvc2l0aW9uICsgZW5kTWF0Y2hbMF0ubGVuZ3RoOwoKICAgICAgICBpZiAoc3RhcnRQb3NpdGlvbiA+IGxhc3RJbmRleCkgewogICAgICAgICAgcGFydGljYWxzLnB1c2goewogICAgICAgICAgICB0eXBlOiAndGV4dCcsCiAgICAgICAgICAgIGNvbnRlbnQ6IGxvZy5zdWJzdHJpbmcobGFzdEluZGV4LCBzdGFydFBvc2l0aW9uKSwKICAgICAgICAgICAgZm9sZDogZmFsc2UKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgcGFydGljYWxzLnB1c2goewogICAgICAgICAgbGFiZWw6IG5hbWUsCiAgICAgICAgICB0eXBlOiAncGFydGljYWwnLAogICAgICAgICAgY29udGVudDogbG9nLnN1YnN0cmluZyhzdGFydFBvc2l0aW9uLCBjdXJzb3IpLAogICAgICAgICAgZm9sZDogISFmb2xkCiAgICAgICAgfSk7CiAgICAgICAgbGFzdEluZGV4ID0gY3Vyc29yOwogICAgICB9CgogICAgICBpZiAobGFzdEluZGV4IDwgbG9nLmxlbmd0aCkgewogICAgICAgIHBhcnRpY2Fscy5wdXNoKHsKICAgICAgICAgIHR5cGU6ICd0ZXh0JywKICAgICAgICAgIGNvbnRlbnQ6IGxvZy5zdWJzdHJpbmcobGFzdEluZGV4KSwKICAgICAgICAgIGZvbGQ6IGZhbHNlCiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBwYXJ0aWNhbHM7CiAgICB9CiAgfSwgewogICAga2V5OiAiX19yZWFjdHN0YW5kaW5fX3JlZ2VuZXJhdGVCeUV2YWwiLAogICAgLy8gQHRzLWlnbm9yZQogICAgdmFsdWU6IGZ1bmN0aW9uIF9fcmVhY3RzdGFuZGluX19yZWdlbmVyYXRlQnlFdmFsKGtleSwgY29kZSkgewogICAgICAvLyBAdHMtaWdub3JlCiAgICAgIHRoaXNba2V5XSA9IGV2YWwoY29kZSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gU3BsaXRlcjsKfSgpOwoKaWYgKHR5cGVvZiBTcGxpdGVyICE9PSAndW5kZWZpbmVkJyAmJiBTcGxpdGVyICYmIFNwbGl0ZXIgPT09IE9iamVjdChTcGxpdGVyKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKFNwbGl0ZXIpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNwbGl0ZXIsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJTcGxpdGVyIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvU3BsaXRlci50cyIKICAgIH0KICB9KTsKfQoKdmFyIG1hdGNoZXJzID0gW1sn546v5aKD5L+h5oGvJywgbmV3IFJlZ0V4cCgiIi5jb25jYXQod2FzaFJlZ0V4cCwgIlRlY2hsZXNzIEZ1bmN0aW9uIEpvYiIpLCAnZycpLCBuZXcgUmVnRXhwKCJIb3N0bmFtZS9JUDogLioiLmNvbmNhdCh3YXNoUmVnRXhwLCAiXG4qIiksICdnJyksIHRydWVdLCBbJ+WPguaVsCcsIG5ldyBSZWdFeHAoJ0FyZ3VtZW50czonLCAnZycpLCBuZXcgUmVnRXhwKCIiLmNvbmNhdCh3YXNoUmVnRXhwLCAiXG5cbiIpLCAnZycpLCB0cnVlXV07CmV4cG9ydCB2YXIgZGVmYXVsdFNwbGl0ZXJzID0gbmV3IFNwbGl0ZXIobWF0Y2hlcnMpOwoKaWYgKHR5cGVvZiBkZWZhdWx0U3BsaXRlcnMgIT09ICd1bmRlZmluZWQnICYmIGRlZmF1bHRTcGxpdGVycyAmJiBkZWZhdWx0U3BsaXRlcnMgPT09IE9iamVjdChkZWZhdWx0U3BsaXRlcnMpICYmIE9iamVjdC5pc0V4dGVuc2libGUoZGVmYXVsdFNwbGl0ZXJzKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShkZWZhdWx0U3BsaXRlcnMsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJkZWZhdWx0U3BsaXRlcnMiLAogICAgICBmaWxlbmFtZTogInNyYy9TcGxpdGVyLnRzIgogICAgfQogIH0pOwp9Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciByZWFjdEhvdExvYWRlciA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmRlZmF1bHQ7CgogIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKHdhc2hSZWdFeHAsICJ3YXNoUmVnRXhwIiwgIi9Vc2Vycy9yYW9oYWkvd29ya3MvcmVhY3QtYW5zaS9zcmMvU3BsaXRlci50cyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKFNwbGl0ZXIsICJTcGxpdGVyIiwgIi9Vc2Vycy9yYW9oYWkvd29ya3MvcmVhY3QtYW5zaS9zcmMvU3BsaXRlci50cyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKG1hdGNoZXJzLCAibWF0Y2hlcnMiLCAiL1VzZXJzL3Jhb2hhaS93b3Jrcy9yZWFjdC1hbnNpL3NyYy9TcGxpdGVyLnRzIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoZGVmYXVsdFNwbGl0ZXJzLCAiZGVmYXVsdFNwbGl0ZXJzIiwgIi9Vc2Vycy9yYW9oYWkvd29ya3MvcmVhY3QtYW5zaS9zcmMvU3BsaXRlci50cyIpOwp9KSgpOwoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgbGVhdmVNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5sZWF2ZU1vZHVsZTsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/Users/raohai/works/react-ansi/src/Spliter.ts"],"names":["washRegExp","Spliter","matchers","log","particals","lastIndex","i","length","name","regExpStart","regExpEnd","fold","startMatch","exec","endMatch","startPosition","index","endPosition","cursor","push","type","content","substring","label","RegExp","defaultSpliters"],"mappings":";;;;;;;;;AAAA,OAAO,IAAMA,UAAU,GAAG,uBAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUP,WAAaC,OAAb;AAAA;AAAA;AACE,mBAAmBC,QAAnB,EAAwC;AAAA;;AAAA;AAAE;;AAD5C;AAAA;AAAA,4BAGUC,GAHV,EAGuB;AACnB,UAAMC,SAAqB,GAAG,EAA9B;AACA,UAAIC,SAAS,GAAG,CAAhB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,QAAL,CAAcK,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAAA,8CACA,KAAKJ,QAAL,CAAcI,CAAd,CADA;AAAA,YACtCE,IADsC;AAAA,YAChCC,WADgC;AAAA,YACnBC,SADmB;AAAA,YACRC,IADQ;;AAE7CF,QAAAA,WAAW,CAACJ,SAAZ,GAAwBA,SAAxB;AACAK,QAAAA,SAAS,CAACL,SAAV,GAAsBA,SAAtB;AACA,YAAMO,UAAU,GAAGH,WAAW,CAACI,IAAZ,CAAiBV,GAAjB,CAAnB;;AACA,YAAI,CAACS,UAAL,EAAiB;AACf;AACD;;AAED,YAAME,QAAQ,GAAGJ,SAAS,CAACG,IAAV,CAAeV,GAAf,CAAjB;;AACA,YAAI,CAACW,QAAL,EAAe;AACb;AACD;;AAED,YAAMC,aAAa,GAAGH,UAAU,CAACI,KAAjC;AACA,YAAMC,WAAW,GAAGH,QAAQ,CAACE,KAA7B;AACA,YAAME,MAAM,GAAGD,WAAW,GAAGH,QAAQ,CAAC,CAAD,CAAR,CAAYP,MAAzC;;AACA,YAAIQ,aAAa,GAAGV,SAApB,EAA+B;AAC7BD,UAAAA,SAAS,CAACe,IAAV,CAAe;AACbC,YAAAA,IAAI,EAAE,MADO;AAEbC,YAAAA,OAAO,EAAElB,GAAG,CAACmB,SAAJ,CAAcjB,SAAd,EAAyBU,aAAzB,CAFI;AAGbJ,YAAAA,IAAI,EAAE;AAHO,WAAf;AAKD;;AAEDP,QAAAA,SAAS,CAACe,IAAV,CAAe;AACbI,UAAAA,KAAK,EAAEf,IADM;AAEbY,UAAAA,IAAI,EAAE,UAFO;AAGbC,UAAAA,OAAO,EAAElB,GAAG,CAACmB,SAAJ,CAAcP,aAAd,EAA6BG,MAA7B,CAHI;AAIbP,UAAAA,IAAI,EAAE,CAAC,CAACA;AAJK,SAAf;AAMAN,QAAAA,SAAS,GAAGa,MAAZ;AACD;;AAED,UAAIb,SAAS,GAAGF,GAAG,CAACI,MAApB,EAA4B;AAC1BH,QAAAA,SAAS,CAACe,IAAV,CAAe;AACbC,UAAAA,IAAI,EAAE,MADO;AAEbC,UAAAA,OAAO,EAAElB,GAAG,CAACmB,SAAJ,CAAcjB,SAAd,CAFI;AAGbM,UAAAA,IAAI,EAAE;AAHO,SAAf;AAKD;;AAED,aAAOP,SAAP;AACD;AAlDH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;AAqDA,IAAMF,QAAQ,GAAG,CACf,CACE,MADF,EAEE,IAAIsB,MAAJ,WAAcxB,UAAd,4BAAiD,GAAjD,CAFF,EAGE,IAAIwB,MAAJ,0BAA8BxB,UAA9B,UAA+C,GAA/C,CAHF,EAIE,IAJF,CADe,EAOf,CAAC,IAAD,EAAO,IAAIwB,MAAJ,CAAW,YAAX,EAAyB,GAAzB,CAAP,EAAsC,IAAIA,MAAJ,WAAcxB,UAAd,WAAgC,GAAhC,CAAtC,EAA4E,IAA5E,CAPe,CAAjB;AAUA,OAAO,IAAMyB,eAAe,GAAG,IAAIxB,OAAJ,CAAYC,QAAZ,CAAxB;;;;;;;;;;;;;;;;;;;;;;0BAzEMF,U;0BAUAC,O;0BAqDPC,Q;0BAUOuB,e","sourcesContent":["export const washRegExp = '\\x1b?[[0-9;]+[a-zA-Z]';\n\nexport type Matcher = [string, RegExp, RegExp, boolean?];\nexport type Partical = {\n  label?: string;\n  content: string;\n  type: 'partical' | 'text';\n  fold: boolean;\n};\n\nexport class Spliter {\n  constructor(public matchers: Matcher[]) {}\n\n  execute(log: string) {\n    const particals: Partical[] = [];\n    let lastIndex = 0;\n\n    for (let i = 0; i < this.matchers.length; i++) {\n      const [name, regExpStart, regExpEnd, fold] = this.matchers[i];\n      regExpStart.lastIndex = lastIndex;\n      regExpEnd.lastIndex = lastIndex;\n      const startMatch = regExpStart.exec(log);\n      if (!startMatch) {\n        continue;\n      }\n\n      const endMatch = regExpEnd.exec(log);\n      if (!endMatch) {\n        continue;\n      }\n\n      const startPosition = startMatch.index;\n      const endPosition = endMatch.index;\n      const cursor = endPosition + endMatch[0].length;\n      if (startPosition > lastIndex) {\n        particals.push({\n          type: 'text',\n          content: log.substring(lastIndex, startPosition),\n          fold: false,\n        });\n      }\n\n      particals.push({\n        label: name,\n        type: 'partical',\n        content: log.substring(startPosition, cursor),\n        fold: !!fold,\n      });\n      lastIndex = cursor;\n    }\n\n    if (lastIndex < log.length) {\n      particals.push({\n        type: 'text',\n        content: log.substring(lastIndex),\n        fold: false,\n      });\n    }\n\n    return particals;\n  }\n}\n\nconst matchers = [\n  [\n    '环境信息',\n    new RegExp(`${washRegExp}Techless Function Job`, 'g'),\n    new RegExp(`Hostname\\/IP: .*${washRegExp}\\n*`, 'g'),\n    true,\n  ],\n  ['参数', new RegExp('Arguments:', 'g'), new RegExp(`${washRegExp}\\n\\n`, 'g'), true],\n] as Matcher[];\n\nexport const defaultSpliters = new Spliter(matchers);\n"]}]}