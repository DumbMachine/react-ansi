{"remainingRequest":"/Users/raohai/works/react-ansi/node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js??ref--5-1!/Users/raohai/works/react-ansi/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js??ref--5-2!/Users/raohai/works/react-ansi/node_modules/_source-map-loader@0.2.4@source-map-loader/index.js!/Users/raohai/works/react-ansi/dist/index.es.js","dependencies":[{"path":"/Users/raohai/works/react-ansi/dist/index.es.js","mtime":1559150448586},{"path":"/Users/raohai/works/react-ansi/dist/index.es.js.map","mtime":1559150448586},{"path":"/Users/raohai/works/react-ansi/node_modules/_cache-loader@3.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/raohai/works/react-ansi/node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/raohai/works/react-ansi/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/raohai/works/react-ansi/node_modules/_source-map-loader@0.2.4@source-map-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../src/utils/i18n.ts","../src/Spliter.ts","../node_modules/_style-inject@0.3.0@style-inject/dist/style-inject.es.js","../node_modules/_anser@1.4.8@anser/lib/index.js","../node_modules/_escape-carriage@1.3.0@escape-carriage/index.js","../src/RawLogger.tsx","../src/index.tsx"],"names":["escapeCarriageReturn","Anser"],"mappings":"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","sourcesContent":["export const i18n = {\n  'rawLog': 'Raw Log',\n};\n\nexport function _(token: keyof typeof i18n) {\n  return i18n.hasOwnProperty(token) ? i18n[token] : token;\n}","export const washRegExp = '\\x1b?[[0-9;]+[a-zA-Z]';\n\nexport type Matcher = [string, RegExp, RegExp, boolean?];\nexport type Partical = {\n  label?: string;\n  content: string;\n  type: 'partical' | 'text';\n  fold: boolean;\n};\n\nexport class Spliter {\n  constructor(public matchers: Matcher[]) {}\n\n  execute(log: string) {\n    const particals: Partical[] = [];\n    let lastIndex = 0;\n\n    for (let i = 0; i < this.matchers.length; i++) {\n      const [name, regExpStart, regExpEnd, fold] = this.matchers[i];\n      regExpStart.lastIndex = lastIndex;\n      regExpEnd.lastIndex = lastIndex;\n      const startMatch = regExpStart.exec(log);\n      if (!startMatch) {\n        continue;\n      }\n\n      const endMatch = regExpEnd.exec(log);\n      if (!endMatch) {\n        continue;\n      }\n\n      const startPosition = startMatch.index;\n      const endPosition = endMatch.index;\n      const cursor = endPosition + endMatch[0].length;\n      if (startPosition > lastIndex) {\n        particals.push({\n          type: 'text',\n          content: log.substring(lastIndex, startPosition),\n          fold: false,\n        });\n      }\n\n      particals.push({\n        label: name,\n        type: 'partical',\n        content: log.substring(startPosition, cursor),\n        fold: !!fold,\n      });\n      lastIndex = cursor;\n    }\n\n    if (lastIndex < log.length) {\n      particals.push({\n        type: 'text',\n        content: log.substring(lastIndex),\n        fold: false,\n      });\n    }\n\n    return particals;\n  }\n}\n\nconst matchers = [\n  [\n    '环境信息',\n    new RegExp(`${washRegExp}Techless Function Job`, 'g'),\n    new RegExp(`Hostname\\/IP: .*${washRegExp}\\n*`, 'g'),\n    true,\n  ],\n  ['参数', new RegExp('Arguments:', 'g'), new RegExp(`${washRegExp}\\n\\n`, 'g'), true],\n] as Matcher[];\n\nexport const defaultSpliters = new Spliter(matchers);\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","\"use strict\";\n\n// This file was originally written by @drudru (https://github.com/drudru/ansi_up), MIT, 2011\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ANSI_COLORS = [[{ color: \"0, 0, 0\", \"class\": \"ansi-black\" }, { color: \"187, 0, 0\", \"class\": \"ansi-red\" }, { color: \"0, 187, 0\", \"class\": \"ansi-green\" }, { color: \"187, 187, 0\", \"class\": \"ansi-yellow\" }, { color: \"0, 0, 187\", \"class\": \"ansi-blue\" }, { color: \"187, 0, 187\", \"class\": \"ansi-magenta\" }, { color: \"0, 187, 187\", \"class\": \"ansi-cyan\" }, { color: \"255,255,255\", \"class\": \"ansi-white\" }], [{ color: \"85, 85, 85\", \"class\": \"ansi-bright-black\" }, { color: \"255, 85, 85\", \"class\": \"ansi-bright-red\" }, { color: \"0, 255, 0\", \"class\": \"ansi-bright-green\" }, { color: \"255, 255, 85\", \"class\": \"ansi-bright-yellow\" }, { color: \"85, 85, 255\", \"class\": \"ansi-bright-blue\" }, { color: \"255, 85, 255\", \"class\": \"ansi-bright-magenta\" }, { color: \"85, 255, 255\", \"class\": \"ansi-bright-cyan\" }, { color: \"255, 255, 255\", \"class\": \"ansi-bright-white\" }]];\n\nvar Anser = function () {\n    _createClass(Anser, null, [{\n        key: \"escapeForHtml\",\n\n\n        /**\n         * Anser.escapeForHtml\n         * Escape the input HTML.\n         *\n         * This does the minimum escaping of text to make it compliant with HTML.\n         * In particular, the '&','<', and '>' characters are escaped. This should\n         * be run prior to `ansiToHtml`.\n         *\n         * @name Anser.escapeForHtml\n         * @function\n         * @param {String} txt The input text (containing the ANSI snippets).\n         * @returns {String} The escaped html.\n         */\n        value: function escapeForHtml(txt) {\n            return new Anser().escapeForHtml(txt);\n        }\n\n        /**\n         * Anser.linkify\n         * Adds the links in the HTML.\n         *\n         * This replaces any links in the text with anchor tags that display the\n         * link. The links should have at least one whitespace character\n         * surrounding it. Also, you should apply this after you have run\n         * `ansiToHtml` on the text.\n         *\n         * @name Anser.linkify\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The HTML containing the <a> tags (unescaped).\n         */\n\n    }, {\n        key: \"linkify\",\n        value: function linkify(txt) {\n            return new Anser().linkify(txt);\n        }\n\n        /**\n         * Anser.ansiToHtml\n         * This replaces ANSI terminal escape codes with SPAN tags that wrap the\n         * content.\n         *\n         * This function only interprets ANSI SGR (Select Graphic Rendition) codes\n         * that can be represented in HTML.\n         * For example, cursor movement codes are ignored and hidden from output.\n         * The default style uses colors that are very close to the prescribed\n         * standard. The standard assumes that the text will have a black\n         * background. These colors are set as inline styles on the SPAN tags.\n         *\n         * Another option is to set `use_classes: true` in the options argument.\n         * This will instead set classes on the spans so the colors can be set via\n         * CSS. The class names used are of the format `ansi-*-fg/bg` and\n         * `ansi-bright-*-fg/bg` where `*` is the color name,\n         * i.e black/red/green/yellow/blue/magenta/cyan/white.\n         *\n         * @name Anser.ansiToHtml\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed to the ansiToHTML method.\n         * @returns {String} The HTML output.\n         */\n\n    }, {\n        key: \"ansiToHtml\",\n        value: function ansiToHtml(txt, options) {\n            return new Anser().ansiToHtml(txt, options);\n        }\n\n        /**\n         * Anser.ansiToJson\n         * Converts ANSI input into JSON output.\n         *\n         * @name Anser.ansiToJson\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed to the ansiToHTML method.\n         * @returns {String} The HTML output.\n         */\n\n    }, {\n        key: \"ansiToJson\",\n        value: function ansiToJson(txt, options) {\n            return new Anser().ansiToJson(txt, options);\n        }\n\n        /**\n         * Anser.ansiToText\n         * Converts ANSI input into text output.\n         *\n         * @name Anser.ansiToText\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The text output.\n         */\n\n    }, {\n        key: \"ansiToText\",\n        value: function ansiToText(txt) {\n            return new Anser().ansiToText(txt);\n        }\n\n        /**\n         * Anser\n         * The `Anser` class.\n         *\n         * @name Anser\n         * @function\n         * @returns {Anser}\n         */\n\n    }]);\n\n    function Anser() {\n        _classCallCheck(this, Anser);\n\n        this.fg = this.bg = this.fg_truecolor = this.bg_truecolor = null;\n        this.bright = 0;\n    }\n\n    /**\n     * setupPalette\n     * Sets up the palette.\n     *\n     * @name setupPalette\n     * @function\n     */\n\n\n    _createClass(Anser, [{\n        key: \"setupPalette\",\n        value: function setupPalette() {\n            this.PALETTE_COLORS = [];\n\n            // Index 0..15 : System color\n            for (var i = 0; i < 2; ++i) {\n                for (var j = 0; j < 8; ++j) {\n                    this.PALETTE_COLORS.push(ANSI_COLORS[i][j].color);\n                }\n            }\n\n            // Index 16..231 : RGB 6x6x6\n            // https://gist.github.com/jasonm23/2868981#file-xterm-256color-yaml\n            var levels = [0, 95, 135, 175, 215, 255];\n            var format = function format(r, g, b) {\n                return levels[r] + \", \" + levels[g] + \", \" + levels[b];\n            };\n            var r = void 0,\n                g = void 0,\n                b = void 0;\n            for (var _r = 0; _r < 6; ++_r) {\n                for (var _g = 0; _g < 6; ++_g) {\n                    for (var _b = 0; _b < 6; ++_b) {\n                        this.PALETTE_COLORS.push(format(_r, _g, _b));\n                    }\n                }\n            }\n\n            // Index 232..255 : Grayscale\n            var level = 8;\n            for (var _i = 0; _i < 24; ++_i, level += 10) {\n                this.PALETTE_COLORS.push(format(level, level, level));\n            }\n        }\n\n        /**\n         * escapeForHtml\n         * Escapes the input text.\n         *\n         * @name escapeForHtml\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The escpaed HTML output.\n         */\n\n    }, {\n        key: \"escapeForHtml\",\n        value: function escapeForHtml(txt) {\n            return txt.replace(/[&<>]/gm, function (str) {\n                return str == \"&\" ? \"&amp;\" : str == \"<\" ? \"&lt;\" : str == \">\" ? \"&gt;\" : \"\";\n            });\n        }\n\n        /**\n         * linkify\n         * Adds HTML link elements.\n         *\n         * @name linkify\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The HTML output containing link elements.\n         */\n\n    }, {\n        key: \"linkify\",\n        value: function linkify(txt) {\n            return txt.replace(/(https?:\\/\\/[^\\s]+)/gm, function (str) {\n                return \"<a href=\\\"\" + str + \"\\\">\" + str + \"</a>\";\n            });\n        }\n\n        /**\n         * ansiToHtml\n         * Converts ANSI input into HTML output.\n         *\n         * @name ansiToHtml\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed ot the `process` method.\n         * @returns {String} The HTML output.\n         */\n\n    }, {\n        key: \"ansiToHtml\",\n        value: function ansiToHtml(txt, options) {\n            return this.process(txt, options, true);\n        }\n\n        /**\n         * ansiToJson\n         * Converts ANSI input into HTML output.\n         *\n         * @name ansiToJson\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options The options passed ot the `process` method.\n         * @returns {String} The JSON output.\n         */\n\n    }, {\n        key: \"ansiToJson\",\n        value: function ansiToJson(txt, options) {\n            options = options || {};\n            options.json = true;\n            options.clearLine = false;\n            return this.process(txt, options, true);\n        }\n\n        /**\n         * ansiToText\n         * Converts ANSI input into HTML output.\n         *\n         * @name ansiToText\n         * @function\n         * @param {String} txt The input text.\n         * @returns {String} The text output.\n         */\n\n    }, {\n        key: \"ansiToText\",\n        value: function ansiToText(txt) {\n            return this.process(txt, {}, false);\n        }\n\n        /**\n         * process\n         * Processes the input.\n         *\n         * @name process\n         * @function\n         * @param {String} txt The input text.\n         * @param {Object} options An object passed to `processChunk` method, extended with:\n         *\n         *  - `json` (Boolean): If `true`, the result will be an object.\n         *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n         *\n         * @param {Boolean} markup\n         */\n\n    }, {\n        key: \"process\",\n        value: function process(txt, options, markup) {\n            var _this = this;\n\n            var self = this;\n            var raw_text_chunks = txt.split(/\\033\\[/);\n            var first_chunk = raw_text_chunks.shift(); // the first chunk is not the result of the split\n\n            if (options === undefined || options === null) {\n                options = {};\n            }\n            options.clearLine = /\\r/.test(txt); // check for Carriage Return\n            var color_chunks = raw_text_chunks.map(function (chunk) {\n                return _this.processChunk(chunk, options, markup);\n            });\n\n            if (options && options.json) {\n                var first = self.processChunkJson(\"\");\n                first.content = first_chunk;\n                first.clearLine = options.clearLine;\n                color_chunks.unshift(first);\n                if (options.remove_empty) {\n                    color_chunks = color_chunks.filter(function (c) {\n                        return !c.isEmpty();\n                    });\n                }\n                return color_chunks;\n            } else {\n                color_chunks.unshift(first_chunk);\n            }\n\n            return color_chunks.join(\"\");\n        }\n\n        /**\n         * processChunkJson\n         * Processes the current chunk into json output.\n         *\n         * @name processChunkJson\n         * @function\n         * @param {String} text The input text.\n         * @param {Object} options An object containing the following fields:\n         *\n         *  - `json` (Boolean): If `true`, the result will be an object.\n         *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n         *\n         * @param {Boolean} markup If false, the colors will not be parsed.\n         * @return {Object} The result object:\n         *\n         *  - `content` (String): The text.\n         *  - `fg` (String|null): The foreground color.\n         *  - `bg` (String|null): The background color.\n         *  - `fg_truecolor` (String|null): The foreground true color (if 16m color is enabled).\n         *  - `bg_truecolor` (String|null): The background true color (if 16m color is enabled).\n         *  - `clearLine` (Boolean): `true` if a carriageReturn \\r was fount at end of line.\n         *  - `was_processed` (Bolean): `true` if the colors were processed, `false` otherwise.\n         *  - `isEmpty` (Function): A function returning `true` if the content is empty, or `false` otherwise.\n         *\n         */\n\n    }, {\n        key: \"processChunkJson\",\n        value: function processChunkJson(text, options, markup) {\n\n            // Are we using classes or styles?\n            options = typeof options == \"undefined\" ? {} : options;\n            var use_classes = options.use_classes = typeof options.use_classes != \"undefined\" && options.use_classes;\n            var key = options.key = use_classes ? \"class\" : \"color\";\n\n            var result = {\n                content: text,\n                fg: null,\n                bg: null,\n                fg_truecolor: null,\n                bg_truecolor: null,\n                clearLine: options.clearLine,\n                decoration: null,\n                was_processed: false,\n                isEmpty: function isEmpty() {\n                    return !result.content;\n                }\n            };\n\n            // Each \"chunk\" is the text after the CSI (ESC + \"[\") and before the next CSI/EOF.\n            //\n            // This regex matches four groups within a chunk.\n            //\n            // The first and third groups match code type.\n            // We supported only SGR command. It has empty first group and \"m\" in third.\n            //\n            // The second group matches all of the number+semicolon command sequences\n            // before the \"m\" (or other trailing) character.\n            // These are the graphics or SGR commands.\n            //\n            // The last group is the text (including newlines) that is colored by\n            // the other group\"s commands.\n            var matches = text.match(/^([!\\x3c-\\x3f]*)([\\d;]*)([\\x20-\\x2c]*[\\x40-\\x7e])([\\s\\S]*)/m);\n\n            if (!matches) return result;\n\n            var orig_txt = result.content = matches[4];\n            var nums = matches[2].split(\";\");\n\n            // We currently support only \"SGR\" (Select Graphic Rendition)\n            // Simply ignore if not a SGR command.\n            if (matches[1] !== \"\" || matches[3] !== \"m\") {\n                return result;\n            }\n\n            if (!markup) {\n                return result;\n            }\n\n            var self = this;\n\n            self.decoration = null;\n\n            while (nums.length > 0) {\n                var num_str = nums.shift();\n                var num = parseInt(num_str);\n\n                if (isNaN(num) || num === 0) {\n                    self.fg = self.bg = self.decoration = null;\n                } else if (num === 1) {\n                    self.decoration = \"bold\";\n                } else if (num === 2) {\n                    self.decoration = \"dim\";\n                    // Enable code 2 to get string\n                } else if (num == 3) {\n                    self.decoration = \"italic\";\n                } else if (num == 4) {\n                    self.decoration = \"underline\";\n                } else if (num == 5) {\n                    self.decoration = \"blink\";\n                } else if (num === 7) {\n                    self.decoration = \"reverse\";\n                } else if (num === 8) {\n                    self.decoration = \"hidden\";\n                    // Enable code 9 to get strikethrough\n                } else if (num === 9) {\n                    self.decoration = \"strikethrough\";\n                } else if (num == 39) {\n                    self.fg = null;\n                } else if (num == 49) {\n                    self.bg = null;\n                    // Foreground color\n                } else if (num >= 30 && num < 38) {\n                    self.fg = ANSI_COLORS[0][num % 10][key];\n                    // Foreground bright color\n                } else if (num >= 90 && num < 98) {\n                    self.fg = ANSI_COLORS[1][num % 10][key];\n                    // Background color\n                } else if (num >= 40 && num < 48) {\n                    self.bg = ANSI_COLORS[0][num % 10][key];\n                    // Background bright color\n                } else if (num >= 100 && num < 108) {\n                    self.bg = ANSI_COLORS[1][num % 10][key];\n                } else if (num === 38 || num === 48) {\n                    // extend color (38=fg, 48=bg)\n                    var is_foreground = num === 38;\n                    if (nums.length >= 1) {\n                        var mode = nums.shift();\n                        if (mode === \"5\" && nums.length >= 1) {\n                            // palette color\n                            var palette_index = parseInt(nums.shift());\n                            if (palette_index >= 0 && palette_index <= 255) {\n                                if (!use_classes) {\n                                    if (!this.PALETTE_COLORS) {\n                                        self.setupPalette();\n                                    }\n                                    if (is_foreground) {\n                                        self.fg = this.PALETTE_COLORS[palette_index];\n                                    } else {\n                                        self.bg = this.PALETTE_COLORS[palette_index];\n                                    }\n                                } else {\n                                    var klass = palette_index >= 16 ? \"ansi-palette-\" + palette_index : ANSI_COLORS[palette_index > 7 ? 1 : 0][palette_index % 8][\"class\"];\n                                    if (is_foreground) {\n                                        self.fg = klass;\n                                    } else {\n                                        self.bg = klass;\n                                    }\n                                }\n                            }\n                        } else if (mode === \"2\" && nums.length >= 3) {\n                            // true color\n                            var r = parseInt(nums.shift());\n                            var g = parseInt(nums.shift());\n                            var b = parseInt(nums.shift());\n                            if (r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255) {\n                                var color = r + \", \" + g + \", \" + b;\n                                if (!use_classes) {\n                                    if (is_foreground) {\n                                        self.fg = color;\n                                    } else {\n                                        self.bg = color;\n                                    }\n                                } else {\n                                    if (is_foreground) {\n                                        self.fg = \"ansi-truecolor\";\n                                        self.fg_truecolor = color;\n                                    } else {\n                                        self.bg = \"ansi-truecolor\";\n                                        self.bg_truecolor = color;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (self.fg === null && self.bg === null && self.decoration === null) {\n                return result;\n            } else {\n                var styles = [];\n                var classes = [];\n                var data = {};\n\n                result.fg = self.fg;\n                result.bg = self.bg;\n                result.fg_truecolor = self.fg_truecolor;\n                result.bg_truecolor = self.bg_truecolor;\n                result.decoration = self.decoration;\n                result.was_processed = true;\n\n                return result;\n            }\n        }\n\n        /**\n         * processChunk\n         * Processes the current chunk of text.\n         *\n         * @name processChunk\n         * @function\n         * @param {String} text The input text.\n         * @param {Object} options An object containing the following fields:\n         *\n         *  - `json` (Boolean): If `true`, the result will be an object.\n         *  - `use_classes` (Boolean): If `true`, HTML classes will be appended to the HTML output.\n         *\n         * @param {Boolean} markup If false, the colors will not be parsed.\n         * @return {Object|String} The result (object if `json` is wanted back or string otherwise).\n         */\n\n    }, {\n        key: \"processChunk\",\n        value: function processChunk(text, options, markup) {\n            var _this2 = this;\n\n            var self = this;\n            options = options || {};\n            var jsonChunk = this.processChunkJson(text, options, markup);\n\n            if (options.json) {\n                return jsonChunk;\n            }\n            if (jsonChunk.isEmpty()) {\n                return \"\";\n            }\n            if (!jsonChunk.was_processed) {\n                return jsonChunk.content;\n            }\n\n            var use_classes = options.use_classes;\n\n            var styles = [];\n            var classes = [];\n            var data = {};\n            var render_data = function render_data(data) {\n                var fragments = [];\n                var key = void 0;\n                for (key in data) {\n                    if (data.hasOwnProperty(key)) {\n                        fragments.push(\"data-\" + key + \"=\\\"\" + _this2.escapeForHtml(data[key]) + \"\\\"\");\n                    }\n                }\n                return fragments.length > 0 ? \" \" + fragments.join(\" \") : \"\";\n            };\n\n            if (jsonChunk.fg) {\n                if (use_classes) {\n                    classes.push(jsonChunk.fg + \"-fg\");\n                    if (jsonChunk.fg_truecolor !== null) {\n                        data[\"ansi-truecolor-fg\"] = jsonChunk.fg_truecolor;\n                        jsonChunk.fg_truecolor = null;\n                    }\n                } else {\n                    styles.push(\"color:rgb(\" + jsonChunk.fg + \")\");\n                }\n            }\n\n            if (jsonChunk.bg) {\n                if (use_classes) {\n                    classes.push(jsonChunk.bg + \"-bg\");\n                    if (jsonChunk.bg_truecolor !== null) {\n                        data[\"ansi-truecolor-bg\"] = jsonChunk.bg_truecolor;\n                        jsonChunk.bg_truecolor = null;\n                    }\n                } else {\n                    styles.push(\"background-color:rgb(\" + jsonChunk.bg + \")\");\n                }\n            }\n\n            if (jsonChunk.decoration) {\n                if (use_classes) {\n                    classes.push(\"ansi-\" + jsonChunk.decoration);\n                } else if (jsonChunk.decoration === \"bold\") {\n                    styles.push(\"font-weight:bold\");\n                } else if (jsonChunk.decoration === \"dim\") {\n                    styles.push(\"opacity:0.5\");\n                } else if (jsonChunk.decoration === \"italic\") {\n                    styles.push(\"font-style:italic\");\n                    // underline and blink are treated bellow\n                } else if (jsonChunk.decoration === \"reverse\") {\n                    styles.push(\"filter:invert(100%)\");\n                } else if (jsonChunk.decoration === \"hidden\") {\n                    styles.push(\"visibility:hidden\");\n                } else if (jsonChunk.decoration === \"strikethrough\") {\n                    styles.push(\"text-decoration:line-through\");\n                } else {\n                    styles.push(\"text-decoration:\" + jsonChunk.decoration);\n                }\n            }\n\n            if (use_classes) {\n                return \"<span class=\\\"\" + classes.join(\" \") + \"\\\"\" + render_data(data) + \">\" + jsonChunk.content + \"</span>\";\n            } else {\n                return \"<span style=\\\"\" + styles.join(\";\") + \"\\\"\" + render_data(data) + \">\" + jsonChunk.content + \"</span>\";\n            }\n        }\n    }]);\n\n    return Anser;\n}();\n\n;\n\nmodule.exports = Anser;","/**\n * Escape carrigage returns like a terminal\n * @param {string} txt - String to escape.\n * @return {string}    - Escaped string.\n */\nfunction escapeCarriageReturn(txt) {\n  if (!txt) return \"\";\n  if (!/\\r/.test(txt)) return txt;\n  txt = txt.replace(/\\r+\\n/gm, \"\\n\"); // \\r followed by \\n --> newline\n  while (/\\r[^$]/.test(txt)) {\n    var base = /^(.*)\\r+/m.exec(txt)[1];\n    var insert = /\\r+(.*)$/m.exec(txt)[1];\n    insert = insert + base.slice(insert.length, base.length);\n    txt = txt.replace(/\\r+.*$/m, \"\\r\").replace(/^.*\\r/m, insert);\n  }\n  return txt;\n}\n\nfunction findLongestString(arr) {\n  var longest = 0;\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[longest].length <= arr[i].length) {\n      longest = i;\n    }\n  }\n  return longest;\n}\n\nfunction escapeSingleLineSafe(txt) {\n  if (!/\\r/.test(txt)) return txt;\n  var arr = txt.split(\"\\r\");\n  var res = [];\n\n  while (arr.length > 0) {\n    var longest = findLongestString(arr);\n    res.push(arr[longest]);\n    arr = arr.slice(longest + 1);\n  }\n\n  return res.join(\"\\r\");\n}\n\n/**\n * Safely escape carrigage returns like a terminal.\n * This allows to escape carrigage returns while allowing future output to be appended\n * without loosing information.\n * Use this as a intermediate escape step if your stream hasn't completed yet.\n * @param {string} txt - String to escape.\n * @return {string}    - Escaped string.\n */\nfunction escapeCarriageReturnSafe(txt) {\n  if (!txt) return \"\";\n  if (!/\\r/.test(txt)) return txt;\n  if (!/\\n/.test(txt)) return escapeSingleLineSafe(txt);\n  txt = txt.replace(/\\r+\\n/gm, \"\\n\"); // \\r followed by \\n --> newline\n  var idx = txt.lastIndexOf(\"\\n\");\n\n  return (\n    escapeCarriageReturn(txt.slice(0, idx)) +\n    \"\\n\" +\n    escapeSingleLineSafe(txt.slice(idx + 1))\n  );\n}\n\nmodule.exports = escapeCarriageReturn;\nmodule.exports.escapeCarriageReturn = escapeCarriageReturn;\nmodule.exports.escapeCarriageReturnSafe = escapeCarriageReturnSafe;\n","import React, { useState, ReactNode } from 'react';\nimport Anser, { AnserJsonEntry } from 'anser';\nimport { escapeCarriageReturn } from 'escape-carriage';\nimport styles from './log.module.less';\nimport { Partical } from './Spliter';\n\nconst LINK_REGEX = /(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/;\n\n\n/**\n * Create a class string.\n * @name createClass\n * @function\n * @param {AnserJsonEntry}.\n * @return {String} class name(s)\n */\nfunction createClass(bundle: AnserJsonEntry) {\n  let classNames: string = '';\n\n  if (!bundle.bg && !bundle.fg) {\n    return '';\n  }\n  if (bundle.bg) {\n    classNames += bundle.bg + ' ';\n  }\n  if (bundle.fg) {\n    classNames += bundle.fg + ' ';\n  }\n\n  classNames = classNames.substring(0, classNames.length - 1);\n  return classNames;\n}\n\n/**\n * Create the style attribute.\n * @name createStyle\n * @function\n * @param {AnserJsonEntry}.\n * @return {Object} returns the style object\n */\nfunction createStyle(bundle: AnserJsonEntry) {\n  const style: { backgroundColor?: string; color?: string } = {};\n  if (bundle.bg) {\n    style.backgroundColor = `rgb(${bundle.bg})`;\n  }\n  if (bundle.fg) {\n    style.color = `rgb(${bundle.fg})`;\n  }\n\n  return style;\n}\n\nfunction ansiToJSON(input: string, useClasses = false) {\n  input = escapeCarriageReturn(input);\n  return Anser.ansiToJson(input, {\n    json: true,\n    remove_empty: true,\n    use_classes: useClasses,\n  });\n}\n\nfunction convertBundleIntoReact(\n  useClasses: boolean,\n  linkify: boolean,\n  bundle: AnserJsonEntry,\n  key: number\n) {\n  const style = useClasses ? {} : createStyle(bundle);\n  const className = useClasses ? createClass(bundle) : '';\n\n  let content: ReactNode[] | string = bundle.content;\n  if (linkify) {\n    content = bundle.content.split(' ').reduce(\n      (words, word, index) => {\n        if (index === 0) {\n          words.push(' ');\n        }\n\n        if (!LINK_REGEX.test(word)) {\n          words.push(word);\n          return words;\n        }\n\n        words.push(<a key={index} href={word} target=\"_blank\" rel=\"noopener noreferer\">\n          {word}\n        </a>);\n\n        return words;\n      }, [] as React.ReactNode[]);\n    }\n  return <span className={className} style={style} key={key}>\n    {content}\n  </span>;\n}\n\nexport function RawLogger({\n  partical,\n  index = 0,\n  foldable = false,\n  useClasses = false,\n  linkify = false,\n}: {\n  partical: Partical;\n  index: number;\n  foldable?: boolean;\n  useClasses?: boolean;\n  linkify?: boolean;\n}) {\n  const [fold, setFold] = useState(partical.fold);\n\n  const lines = (\n    <>\n      {partical.content.split('\\n').map((line, index) => {\n        return (\n          <div className={styles.logLine} key={index}>\n            <a />\n            {ansiToJSON(line).map(convertBundleIntoReact.bind(null, useClasses, linkify))}\n          </div>\n        );\n      })}\n    </>\n  );\n\n  if (foldable) {\n    return (\n      <div className={fold ? styles.fold : styles.foldOpen}>\n        <div\n          key={`folder-placeholder-${index}`}\n          className={styles.foldLine}\n          onClick={() => setFold(!fold)}\n        >\n          {partical.label}\n        </div>\n        {lines}\n      </div>\n    );\n  }\n\n  return lines;\n}\n","/**\n * An foldable ansi logger for react\n * Inspired by ansi-to-react: https://github.com/nteract/nteract/blob/master/packages/ansi-to-react\n */\nimport React, { useRef } from 'react';\nimport { _ } from './utils/i18n';\nimport { defaultSpliters } from './Spliter';\n\nimport styles from './log.module.less';\nimport { RawLogger } from './RawLogger';\n\nexport interface FoldableLoggerProps {\n  log: string;\n  style?: React.CSSProperties;\n  bodyStyle?: React.CSSProperties;\n}\n\nexport default function FoldableLogger({\n  style,\n  bodyStyle,\n  log,\n}: FoldableLoggerProps) {\n  const bodyRef = useRef<HTMLDivElement>(null);\n  const foldedLogger = defaultSpliters.execute(log);\n\n  function scrollBodyToTop() {\n    if (!bodyRef.current) {\n      return;\n    }\n    bodyRef.current.scrollTop = 0;\n  }\n\n  return (\n    <div className={styles.logMain} style={style}>\n      <div className={styles.logHeader}>\n        <button className={styles.rawLog}>\n          {_('rawLog')}\n        </button>\n      </div>\n\n      <div className={styles.logBody} style={bodyStyle} ref={bodyRef}>\n        <pre id=\"log\" className={styles.ansi}>\n          {foldedLogger.map((partical, index) => {\n            return (\n              <RawLogger\n                key={`logger-line-${index}`}\n                foldable={partical.type === 'partical'}\n                partical={partical}\n                index={index}\n              />\n            );\n          })}\n        </pre>\n      </div>\n      <div className={styles.logFooter} onClick={scrollBodyToTop}>\n        <a className={styles.backToTop}>Top</a>\n      </div>\n    </div>\n  );\n}\n"]}]}